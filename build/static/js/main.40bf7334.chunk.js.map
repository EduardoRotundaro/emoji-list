{"version":3,"sources":["list.js","Card.jsx","index.jsx","App.jsx"],"names":["LIST","emoji","tags","EMOJI_LIST","props","item","className","onClick","join","ReactDOM","render","copyToClipBoard","index","getEmoji","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","map","key","Card","getElementById"],"mappings":"kJAAMA,G,UAAO,CACT,CAAEC,MAAO,2BAAQC,KAAM,CAAC,OACxB,CAAED,MAAO,2BAAQC,KAAM,CAAC,OACxB,CAAED,MAAO,2BAAQC,KAAM,CAAC,OACxB,CAAED,MAAO,2BAAQC,KAAM,CAAC,OACxB,CAAED,MAAO,2BAAQC,KAAM,CAAC,OACxB,CAAED,MAAO,eAAMC,KAAM,CAAC,OACtB,CAAED,MAAO,2BAAQC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACzD,CAAED,MAAO,2BAAQC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACzD,CAAED,MAAO,2BAAQC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACzD,CAAED,MAAO,2BAAQC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACzD,CAAED,MAAO,2BAAQC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACzD,CAAED,MAAO,eAAMC,KAAM,CAAC,YAAa,OAAQ,WAAY,gBACvD,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,UACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,UACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,UACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,UACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,UACxC,CAAED,MAAO,eAAMC,KAAM,CAAC,eAAgB,UACtC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,aACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,aACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,aACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,aACxC,CAAED,MAAO,2BAAQC,KAAM,CAAC,eAAgB,aACxC,CAAED,MAAO,eAAMC,KAAM,CAAC,eAAgB,eAG7BC,EAAaH,ECzBX,WAAAI,GACX,IAAMC,EAAOD,EAAMH,MACnB,OACI,yBAAKK,UAAU,OAAOC,QAASH,EAAMG,SACjC,yBAAKD,UAAU,QACX,4BAAKD,EAAKJ,QAEd,yBAAKK,UAAU,QACX,6BAASA,UAAU,QAAO,2CAAyBD,EAAKH,KAAKM,KAAK,UCFlFC,IAASC,OAAO,mBCFD,SAAAN,GAEX,IAAMO,EAAkB,SAACC,GACrB,IAAMX,EHoBU,SAACW,GAAD,OAAaZ,EAAKY,IAAUZ,EAAKY,GAAOX,OAAU,GGpBpDY,CAASD,GAEnBE,EAAQC,SAASC,cAAc,YACnCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAMK,MAAQlB,EACda,EAAMM,SACNL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,IAW9B,OACI,yBAAKR,UAAU,mBACX,yBAAKA,UAAU,OATZH,EAAWoB,KAAI,SAAClB,EAAMO,GAAP,OAClB,yBAAKY,IAAG,eAAUZ,GAASN,UAAU,2BACjC,kBAACmB,EAAD,CAAMxB,MAAOI,EAAME,QAAS,kBAAKI,EAAgBC,cDdjD,MAASG,SAASW,eAAe,U","file":"static/js/main.40bf7334.chunk.js","sourcesContent":["const LIST = [\r\n    { emoji: \"👌🏿\", tags: ['Ok'] },\r\n    { emoji: \"👌🏾\", tags: ['Ok'] },\r\n    { emoji: \"👌🏽\", tags: ['Ok'] },\r\n    { emoji: \"👌🏼\", tags: ['Ok'] },\r\n    { emoji: \"👌🏻\", tags: ['Ok'] },\r\n    { emoji: \"👌\", tags: ['Ok'] },\r\n    { emoji: \"👍🏿\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"👍🏾\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"👍🏽\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"👍🏼\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"👍🏻\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"👍\", tags: ['Thumbs Up', 'Like', 'Positive', 'Affirmative'] },\r\n    { emoji: \"🙏🏿\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙏🏾\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙏🏽\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙏🏼\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙏🏻\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙏\", tags: ['Folded Hands', 'Grace'] },\r\n    { emoji: \"🙌🏿\", tags: ['Raised Hands', 'Hands Up'] },\r\n    { emoji: \"🙌🏾\", tags: ['Raised Hands', 'Hands Up'] },\r\n    { emoji: \"🙌🏽\", tags: ['Raised Hands', 'Hands Up'] },\r\n    { emoji: \"🙌🏼\", tags: ['Raised Hands', 'Hands Up'] },\r\n    { emoji: \"🙌🏻\", tags: ['Raised Hands', 'Hands Up'] },\r\n    { emoji: \"🙌\", tags: ['Raised Hands', 'Hands Up'] },\r\n];\r\n\r\nexport const EMOJI_LIST = LIST;\r\n\r\nexport const getEmoji = (index) => ((LIST[index] && LIST[index].emoji) || '');","import React from 'react';\r\n\r\nexport default props => {\r\n    const item = props.emoji;\r\n    return (\r\n        <div className=\"card\" onClick={props.onClick}>\r\n            <div className=\"head\">\r\n                <h2>{item.emoji}</h2>\r\n            </div>\r\n            <div className=\"body\">\r\n                <section className=\"tags\"><span>Tags:&nbsp;</span>{item.tags.join(', ')}</section>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\r\n\r\nimport { EMOJI_LIST, getEmoji } from './list';\r\n\r\nimport Card from './Card';\r\n\r\nexport default props => {\r\n\r\n    const copyToClipBoard = (index) => {\r\n        const emoji = getEmoji(index);\r\n\r\n        let dummy = document.createElement(\"textarea\");\r\n        document.body.appendChild(dummy);\r\n        dummy.value = emoji;\r\n        dummy.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(dummy);\r\n    }\r\n\r\n    function renderCards (){\r\n        return EMOJI_LIST.map((item, index) => (\r\n            <div key={`card_${index}`} className=\"col-lg-2 col-sm-3 col-4\">\r\n                <Card emoji={item} onClick={()=> copyToClipBoard(index)} />\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {renderCards()}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}